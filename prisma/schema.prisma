generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SchoolAdmin {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  password        String
  createdAt       DateTime      @default(now())
  drivingSchool   DrivingSchool @relation(fields: [drivingSchoolId], references: [id])
  drivingSchoolId Int           @unique
  role            Role          @default(SCHOOL_ADMIN)
}

model DrivingSchool {
  id                Int      @id @default(autoincrement())
  name              String
  address           String
  branches          String? // филиалы (если есть)
  phone             String
  email             String
  website           String?  // сайт (если есть)
  socialLinks       String? // соцсети (если есть)
  workingHours      String?  // часы работы (можно сделать отдельной сущностью, если нужно)
  city              String  // район (если нужно отдельно)
  area              String?  // район (если нужно отдельно)
  licenseTypes      String? // Führerscheinklassen (B, A, C, ...)
  isAutomatic       Boolean? // Automatik
  isManual          Boolean?  // Schaltung
  baseFee           Decimal? // Grundgebühr
  pricePerLesson    Decimal?  // Preis pro Fahrstunde (стандарт)
  pricePerNight     Decimal? // Preis pro Fahrstunde (ночь/автобан/дальняя поездка)
  priceSpecial      Decimal? // Preis für Sonderfahrten
  theoryIncluded    Boolean?  // Theoriekurs включен?
  theoryPrice       Decimal? // Цена теории отдельно
  firstAidAvailable Boolean?  // Erste-Hilfe-Kurs предоставляется?
  firstAidPrice     Decimal? // Цена Erste-Hilfe-Kurs
  eyeTestAvailable  Boolean?  // Sehtest предоставляется?
  eyeTestPrice      Decimal? // Цена Sehtest
  registrationTUV   Boolean?  // Anmeldung beim TÜV / DEKRA включена?
  examPrice         Decimal? // Preis für Prüfung (практика/теория)
  avgTotalPrice     Decimal? // Durchschnittlicher Endpreis
  languages         String? // Sprachen der Ausbildung
  supportDisabled   Boolean?  // Unterstützung für Menschen mit Einschränkungen
  digitalLessons    Boolean?  // Digitaler Unterricht verfügbar?
  onlineRegistration Boolean? // Online-Anmeldung möglich?
  intensiveCourses  Boolean?  // Intensivkurse / Ferienkurse
  offersForSeniors  Boolean?  // Angebote für Senioren/Erwachsene
  bf17Special       Boolean?  // Специализация на „Begleitetes Fahren ab 17“
  financingOptions  String?  // Finanzierungsmöglichkeiten
  successRate       Decimal? // Erfolgsquote
  description       String?  // Описание/особенности
  createdAt         DateTime @default(now())
  schoolAdmin       SchoolAdmin?
}

model SuperAdmin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      Role     @default(SUPER_ADMIN)
}

enum Role {
  SCHOOL_ADMIN
  SUPER_ADMIN
}
